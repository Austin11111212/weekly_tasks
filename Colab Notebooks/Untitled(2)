{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNYrcV8zS4Rdgpak0uRZwZy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"pBPY6xlyviff"},"outputs":[],"source":["Skip to main content\n","pandas.ipynb\n","pandas.ipynb_Notebook unstarred\n","Changes will not be saved\n","[ ]\n","1\n","import pandas as pd\n","[ ]\n","  1\n","  2\n","ser = pd.Series(data = [1,2,4,6,4])\n","ser\n","0    1\n","1    2\n","2    4\n","3    6\n","4    4\n","dtype: int64\n","[ ]\n","  1\n","ser[3:5]\n","3    6\n","4    4\n","dtype: int64\n","[ ]\n","  1\n","  2\n","ser = pd.Series(data = ['ade', 'susan','ee',3,'ee'])\n","ser\n","0      ade\n","1    susan\n","2       ee\n","3        3\n","4       ee\n","dtype: object\n","[ ]\n","  1\n","  2\n","products = ('A', 'B', 'C', 'D')\n","type(products)\n","tuple\n","[ ]\n","  1\n","  2\n","product_categories = pd.Series(products)\n","product_categories\n","0    A\n","1    B\n","2    C\n","3    D\n","dtype: object\n","[ ]\n","  1\n","type(product_categories)\n","\n","[ ]\n","  1\n","import numpy as np\n","[ ]\n","  1\n","  2\n","array_a = np.array([10, 20, 30, 40, 50])\n","array_a\n","array([10, 20, 30, 40, 50])\n","[ ]\n","  1\n","a = pd.Series(array_a)\n","[ ]\n","  1\n","a\n","0    10\n","1    20\n","2    30\n","3    40\n","4    50\n","dtype: int64\n","[ ]\n","  1\n","  2\n","  3\n","occurence = [20, 15, 6, 43]\n","S=pd.Series(data = occurence)\n","S\n","0    20\n","1    15\n","2     6\n","3    43\n","dtype: int64\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","color=[\"pink\", \"white\", \"black\", \"blue\"]\n","occurence = [20, 15, 6, 43]\n","S=pd.Series(occurence,color)\n","S\n","20     pink\n","15    white\n","6     black\n","43     blue\n","dtype: object\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","  5\n","color1=[\"pink\", \"white\", \"black\", \"blue\"]\n","color2=[\"pink\", \"red\", \"black\", \"blue\"]\n","S1=pd.Series([20, 15, 6, 43], index=color1)\n","S2=pd.Series([3, 22, 9, 10], index=color2)\n","S1\n","pink     20\n","white    15\n","black     6\n","blue     43\n","dtype: int64\n","[ ]\n","  1\n","S2\n","pink      3\n","red      22\n","black     9\n","blue     10\n","dtype: int64\n","[ ]\n","  1\n","S1 + S2\n","black    15.0\n","blue     53.0\n","pink     23.0\n","red       NaN\n","white     NaN\n","dtype: float64\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","  5\n","  6\n","  7\n","input_data = {\"ProductName\": [\"Product 1\", \"Product 2\", \"Product 3\"],\n","        \"ProductPrice\": [10, 20, 30]}\n","new = [5,3,1]\n","names = ['uu','ii']\n","# df1 = pd.DataFrame(index = new, data = input_data)\n","# df1 = pd.DataFrame(data = input_data)\n","df1 = pd.DataFrame(input_data, index = new)\n","[ ]\n","  1\n","df1\n","\n","[ ]\n","  1\n","df1.columns\n","Index(['ProductName', 'ProductPrice'], dtype='object')\n","[ ]\n","  1\n","df1.index\n","Index([5, 3, 1], dtype='int64')\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","data = [{\"ProductName\": \"Product 1\", \"ProductPrice\": 10},\n","        {\"ProductName\": \"Product 2\", \"ProductPrice\": 20},\n","        {\"ProductName\": \"Product 3\", \"ProductPrice\": 30}]\n","df3 = pd.DataFrame(data)\n","[ ]\n","  1\n","df3\n","\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","  5\n","  6\n","product_name = pd.Series([\"Product 1\", \"Product 2\", \"Product 3\"])\n","product_price = pd.Series([10, 20, 30])\n","\n","data = {\"ProductName\": product_name, \"ProductPrice\": product_price}\n","\n","df4 = pd.DataFrame(data)\n","[ ]\n","  1\n","df4\n","\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","  5\n","data = [['Product 1', 10],\n","        ['Product 2', 20],\n","        ['Product 3', 30]]\n","\n","df5 = pd.DataFrame(data, columns=['ProductName', 'ProductPrice'])\n","[ ]\n","  1\n","df5\n","\n","[ ]\n","  1\n","  2\n","  3\n","data = {'ProductName': ['Product 1', 'Product 2', 'Product 3'], 'ProductPrice': [10, 20, 30]}\n","index = ['A', 'B', 'C']\n","df6 = pd.DataFrame(data, index=index)\n","[ ]\n","  1\n","df6\n","\n","[ ]\n","  1\n","  2\n","ser = pd.Series(data = [7,2,4,6,4])\n","ser\n","0    7\n","1    2\n","2    4\n","3    6\n","4    4\n","dtype: int64\n","[ ]\n","  1\n","ser[2]\n","4\n","[ ]\n","  1\n","ser[2:]\n","2    4\n","3    6\n","4    4\n","dtype: int64\n","[ ]\n","  1\n","df = pd.read_csv('/content/fake_gomycode_student_database.csv')\n","[ ]\n","  1\n","df.shape[0]\n","5000\n","[ ]\n","  1\n","# df.index = range(0, df.shape[0])\n","[ ]\n","  1\n","df\n","\n","[ ]\n","  1\n","df[['Name','Location','Age']]\n","\n","[ ]\n","  1\n","df[2:3]\n","\n","[ ]\n","  1\n","df[2:54]\n","\n","[ ]\n","  1\n","df[3:5]\n","\n","[ ]\n","  1\n","df.loc[[555,2,1], ['Name','Age','Location']]\n","\n","[ ]\n","  1\n","df.iloc[:12, [3,8,7]]\n","\n","[ ]\n","  1\n","df[df.loc[:,'Course'] == 'Blockchain']\n","\n","[ ]\n","  1\n","df[df.loc[:,'Course'] != 'Blockchain']\n","\n","[ ]\n","  1\n","df[~(df.loc[:,'Course'] == 'Blockchain')]\n","\n","[ ]\n","  1\n","df.query(\"Course == 'Blockchain'\")\n","\n","[ ]\n","  1\n","  2\n","import pandas as pd\n","df = pd.read_csv('/content/fake_gomycode_student_database.csv')\n","[ ]\n","  1\n","df = pd.read_csv('/content/fake_gomycode_student_database.csv')\n","[ ]\n","  1\n","df\n","\n","[ ]\n","  1\n","df.head()\n","\n","[ ]\n","  1\n","df.head(9)\n","\n","[ ]\n","  1\n","df.tail()\n","\n","[ ]\n","  1\n","df.tail(13)[['Name','Course']]\n","\n","[ ]\n","  1\n","df.info()\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5000 entries, 0 to 4999\n","Data columns (total 17 columns):\n"," #   Column          Non-Null Count  Dtype\n","---  ------          --------------  -----\n"," 0   StudentID       5000 non-null   object\n"," 1   FirstName       5000 non-null   object\n"," 2   LastName        5000 non-null   object\n"," 3   Name            5000 non-null   object\n"," 4   Course          5000 non-null   object\n"," 5   AmountPaid      5000 non-null   int64\n"," 6   Outstanding     5000 non-null   int64\n"," 7   Location        5000 non-null   object\n"," 8   Age             5000 non-null   int64\n"," 9   MaritalStatus   5000 non-null   object\n"," 10  Background      5000 non-null   object\n"," 11  EnrollmentDate  5000 non-null   object\n"," 12  PhoneNumber     5000 non-null   int64\n"," 13  Email           5000 non-null   object\n"," 14  Gender          5000 non-null   object\n"," 15  Occupation      5000 non-null   object\n"," 16  Mode            5000 non-null   object\n","dtypes: int64(4), object(13)\n","memory usage: 664.2+ KB\n","[ ]\n","  1\n","df.describe()\n","\n","[ ]\n","  1\n","df.describe(include = 'object')\n","\n","[ ]\n","  1\n","df.describe(include = 'all')\n","\n","[ ]\n","  1\n","df.head(4)\n","\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID         0\n","FirstName         0\n","LastName          0\n","Name              0\n","Course            0\n","AmountPaid        0\n","Outstanding       0\n","Location          0\n","Age               0\n","MaritalStatus     0\n","Background        0\n","EnrollmentDate    0\n","PhoneNumber       0\n","Email             0\n","Gender            0\n","Occupation        0\n","Mode              0\n","dtype: int64\n","[ ]\n","  1\n","df.isnull().sum()\n","StudentID           0\n","FirstName         744\n","LastName            0\n","Name                0\n","Course              0\n","AmountPaid        744\n","Outstanding         0\n","Location            0\n","Age               744\n","MaritalStatus       0\n","Background          0\n","EnrollmentDate      0\n","PhoneNumber         0\n","Email               0\n","Gender              0\n","Occupation          0\n","Mode                0\n","dtype: int64\n","[ ]\n","  1\n","import numpy as np\n","[ ]\n","  1\n","df.iloc[33:777, [1,5,8]]\n","\n","[ ]\n","  1\n","df.iloc[33:777, [1,5,8]] = np.nan\n","[ ]\n","  1\n","df.iloc[33:777, [1,5,8]]\n","\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID           0\n","FirstName         744\n","LastName            0\n","Name                0\n","Course              0\n","AmountPaid        744\n","Outstanding         0\n","Location            0\n","Age               744\n","MaritalStatus       0\n","Background          0\n","EnrollmentDate      0\n","PhoneNumber         0\n","Email               0\n","Gender              0\n","Occupation          0\n","Mode                0\n","dtype: int64\n","[ ]\n","  1\n","df.info()\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 5000 entries, 0 to 4999\n","Data columns (total 17 columns):\n"," #   Column          Non-Null Count  Dtype\n","---  ------          --------------  -----\n"," 0   StudentID       5000 non-null   object\n"," 1   FirstName       4256 non-null   object\n"," 2   LastName        5000 non-null   object\n"," 3   Name            5000 non-null   object\n"," 4   Course          5000 non-null   object\n"," 5   AmountPaid      4256 non-null   float64\n"," 6   Outstanding     5000 non-null   int64\n"," 7   Location        5000 non-null   object\n"," 8   Age             4256 non-null   float64\n"," 9   MaritalStatus   5000 non-null   object\n"," 10  Background      5000 non-null   object\n"," 11  EnrollmentDate  5000 non-null   object\n"," 12  PhoneNumber     5000 non-null   int64\n"," 13  Email           5000 non-null   object\n"," 14  Gender          5000 non-null   object\n"," 15  Occupation      5000 non-null   object\n"," 16  Mode            5000 non-null   object\n","dtypes: float64(2), int64(2), object(13)\n","memory usage: 664.2+ KB\n","[ ]\n","  1\n","df.isna().sum().sum()\n","2232\n","[ ]\n","  1\n","df['FirstName'].isna().sum()\n","744\n","[ ]\n","  1\n","df['FirstName'].mode()\n","0    Yewande\n","Name: FirstName, dtype: object\n","[ ]\n","  1\n","most_occuring = df['FirstName'].mode()[0]\n","[ ]\n","  1\n","most_occuring\n","\n","[ ]\n","  1\n","# df.fillna(0)\n","[ ]\n","  1\n","df['FirstName'].fillna(most_occuring)\n","0       Yetunde\n","1         Hauwa\n","2         Tunde\n","3       Yewande\n","4         Bello\n","         ...\n","4995    Ifeanyi\n","4996    Yewande\n","4997      Tunde\n","4998     Hassan\n","4999    Uchenna\n","Name: FirstName, Length: 5000, dtype: object\n","[ ]\n","  1\n","df['FirstName'] = df['FirstName'].fillna(most_occuring)\n","[ ]\n","  1\n","df['FirstName'].fillna(most_occuring, inplace = True)\n","[ ]\n","  1\n","df['FirstName'].isna().sum()\n","0\n","[ ]\n","  1\n","# df['FirstName'].fillna('lekan', inplace = True)\n","[ ]\n","  1\n","# df['Age'].mean()\n","34.08670112781955\n","[ ]\n","  1\n","mean_val = np.mean(df['Age'])\n","[ ]\n","  1\n","df['Age'] = df['Age'].fillna(mean_val)\n","[ ]\n","  1\n","df['Age'].isna().sum()\n","0\n","[ ]\n","  1\n","np.mean(df['Age'])\n","34.086701127819545\n","[ ]\n","  1\n","df[(df['FirstName'] == 'Yewande') | (df['LastName'] == 'Yewande')]\n","\n","[ ]\n","  1\n","  2\n","  3\n","  4\n","  5\n","import pandas as pd\n","import numpy as np\n","df = pd.read_csv('/content/fake_gomycode_student_database.csv')\n","\n","df.iloc[33:777, [1,5,8]] = np.nan\n","[ ]\n","  1\n","df.iloc[33:777, [1,5,8]] = np.nan\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID           0\n","FirstName         744\n","LastName            0\n","Name                0\n","Course              0\n","AmountPaid        744\n","Outstanding         0\n","Location            0\n","Age               744\n","MaritalStatus       0\n","Background          0\n","EnrollmentDate      0\n","PhoneNumber         0\n","Email               0\n","Gender              0\n","Occupation          0\n","Mode                0\n","dtype: int64\n","[ ]\n","  1\n","df.dropna(axis=0, how = 'any')\n","\n","[ ]\n","  1\n","df.dropna(axis=0, how = 'all')\n","\n","[ ]\n","  1\n","df.iloc[1000:1500, :] = np.nan\n","[ ]\n","  1\n","df.iloc[1000:1500, :]\n","\n","[ ]\n","  1\n","df.dropna(axis=0, how = 'all')\n","\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID           0\n","FirstName         744\n","LastName            0\n","Name                0\n","Course              0\n","AmountPaid        744\n","Outstanding         0\n","Location            0\n","Age               744\n","MaritalStatus       0\n","Background          0\n","EnrollmentDate      0\n","PhoneNumber         0\n","Email               0\n","Gender              0\n","Occupation          0\n","Mode                0\n","dtype: int64\n","[ ]\n","  1\n","df.dropna(axis = 0, thresh = 5)\n","\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID          500\n","FirstName         1244\n","LastName           500\n","Name               500\n","Course             500\n","AmountPaid        1244\n","Outstanding        500\n","Location           500\n","Age               1244\n","MaritalStatus      500\n","Background         500\n","EnrollmentDate     500\n","PhoneNumber        500\n","Email              500\n","Gender             500\n","Occupation         500\n","Mode               500\n","dtype: int64\n","[ ]\n","1\n","df.dropna(axis = 1)\n","\n","[ ]\n","  1\n","df.shape\n","(5000, 17)\n","[ ]\n","  1\n","  2\n","  3\n","df = pd.read_csv('/content/fake_gomycode_student_database.csv')\n","\n","df.iloc[33:777, [1,5,8]] = np.nan\n","[ ]\n","  1\n","df.isna().sum()\n","StudentID           0\n","FirstName         744\n","LastName            0\n","Name                0\n","Course              0\n","AmountPaid        744\n","Outstanding         0\n","Location            0\n","Age               744\n","MaritalStatus       0\n","Background          0\n","EnrollmentDate      0\n","PhoneNumber         0\n","Email               0\n","Gender              0\n","Occupation          0\n","Mode                0\n","dtype: int64\n","[ ]\n","  1\n","df.dropna(axis = 1, how = 'all')\n","\n","[ ]\n","  1\n","df['Outstanding'].plot(kind = 'hist', bins = 50);\n","\n","[ ]\n","  1\n","df['Outstanding']\n","0        386\n","1       3575\n","2        147\n","3       2353\n","4       1321\n","        ...\n","4995    6191\n","4996      27\n","4997    3159\n","4998     130\n","4999     898\n","Name: Outstanding, Length: 5000, dtype: int64\n","[ ]\n","  1\n","  2\n","from scipy import stats\n","# data = data[(np.abs(stats.zscore(data)) < 3).all(axis=1)]\n","[ ]\n","  1\n","stats.zscore(df['Outstanding'])\n","0      -0.720896\n","1       1.893421\n","2      -0.916826\n","3       0.891635\n","4       0.045610\n","          ...\n","4995    4.037997\n","4996   -1.015201\n","4997    1.552388\n","4998   -0.930763\n","4999   -0.301162\n","Name: Outstanding, Length: 5000, dtype: float64\n","[ ]\n","  1\n","df['Outstanding'] = df['Outstanding'][(np.abs(stats.zscore(df['Outstanding'])) < 3)]\n","[ ]\n","  1\n","  2\n","df['Outstanding'].plot(kind = 'hist', bins = 5);\n","\n","\n","[ ]\n","  1\n","df['AmountPaid'].dtype\n","dtype('float64')\n","[ ]\n","  1\n","df['AmountPaid'] = df['AmountPaid'].astype(str)\n","[ ]\n","  1\n","# df['AmountPaid'].mean()\n","[ ]\n","  1\n","df['LastName'].head(5)\n","0    Ekwueme\n","1     Okafor\n","2        Eze\n","3    Ibrahim\n","4    Akinola\n","Name: LastName, dtype: object\n","[ ]\n","  1\n","df['LastName'].apply(lambda x: x.upper()).head()\n","0    EKWUEME\n","1     OKAFOR\n","2        EZE\n","3    IBRAHIM\n","4    AKINOLA\n","Name: LastName, dtype: object\n","[ ]\n","  1\n","df['LastName'] = df['LastName'].apply(lambda x: x[0::2])\n","[ ]\n","  1\n","df.to_csv(\"cleaned_data.csv\")\n","[ ]\n","  1\n","df.to_excel(\"cleaned_data.xlsx\")\n","[ ]\n","  1\n","\n","Start coding or generate with AI.\n","Colab paid products - Cancel contracts here\n"]}]}